{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMYu5k4SzfqW6dw14Ru/EXE"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Latihan 1 : Antrian Pemesanan Tiket Bioskop**"],"metadata":{"id":"u7_x2vQElwZS"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W00bNPolkvar","executionInfo":{"status":"ok","timestamp":1741775680900,"user_tz":-420,"elapsed":29,"user":{"displayName":"Ilyasa Abiyyu","userId":"07140171144983850462"}},"outputId":"61e99cf5-ad5b-4ca0-cf82-408da1ab6556"},"outputs":[{"output_type":"stream","name":"stdout","text":["IA35 telah ditambahkan ke antrian.\n","ZS57 adalah VIP Customer dan langsung mendapatkan kursi!\n","XY11 telah ditambahkan ke antrian.\n","ZT32 telah ditambahkan ke antrian.\n","Antrian saat ini: ['IA35', 'XY11', 'ZT32']\n","Pelanggan pertama dalam antrian: IA35\n","Pelanggan terakhir dalam antrian: ZT32\n","Total antrian: 3\n","Melayani: IA35\n","Antrian setelah pelayanan: ['XY11', 'ZT32']\n"]}],"source":["class TicketQueue:\n","    def __init__(self, capacity=10):\n","        self.queue = []\n","        self.capacity = capacity\n","\n","    def enqueue(self, ticket_id):\n","        if len(self.queue) < self.capacity:\n","            self.queue.append(ticket_id)\n","            print(f\"{ticket_id} telah ditambahkan ke antrian.\")\n","        else:\n","            print(\"Antrian penuh! Harap tunggu hingga ada slot kosong.\")\n","\n","    def dequeue(self):\n","        if self.is_empty():\n","            print(\"Antrian kosong, tidak ada pelanggan yang dilayani.\")\n","            return None\n","        return self.queue.pop(0)\n","\n","    def front(self):\n","        if self.is_empty():\n","            return None\n","        return self.queue[0]\n","\n","    def rear(self):\n","        if self.is_empty():\n","            return None\n","        return self.queue[-1]\n","\n","    def is_empty(self):\n","        return len(self.queue) == 0\n","\n","    def size(self):\n","        return len(self.queue)\n","\n","    def process_vip(self, ticket_id):\n","        if '7' in ticket_id:\n","            print(f\"{ticket_id} adalah VIP Customer dan langsung mendapatkan kursi!\")\n","        else:\n","            self.enqueue(ticket_id)\n","\n","# Contoh penggunaan\n","queue = TicketQueue()\n","\n","# Menambahkan pelanggan ke antrian\n","queue.process_vip(\"IA35\")\n","queue.process_vip(\"ZS57\")\n","queue.process_vip(\"XY11\")\n","queue.process_vip(\"ZT32\")\n","\n","print(\"Antrian saat ini:\", queue.queue)\n","print(\"Pelanggan pertama dalam antrian:\", queue.front())\n","print(\"Pelanggan terakhir dalam antrian:\", queue.rear())\n","print(\"Total antrian:\", queue.size())\n","\n","# Melayani pelanggan\n","print(\"Melayani:\", queue.dequeue())\n","print(\"Antrian setelah pelayanan:\", queue.queue)"]},{"cell_type":"markdown","source":["**Latihan 2 :  Antrian Layanan Fotokopi Kampus**"],"metadata":{"id":"trYoFzVRmTXh"}},{"cell_type":"code","source":["class PhotocopyQueue:\n","    def __init__(self):\n","        self.queue = []\n","\n","    def enqueue(self, order_id, num_pages):\n","        if num_pages < 10:\n","            print(f\"{order_id} masuk Fast Track dan langsung diproses!\")\n","        else:\n","            self.queue.append((order_id, num_pages))\n","            print(f\"Pesanan {order_id} ({num_pages} halaman) ditambahkan ke antrian.\")\n","\n","    def dequeue(self):\n","        if self.is_empty():\n","            print(\"Antrian kosong, tidak ada pesanan yang diproses.\")\n","            return None\n","        order = self.queue.pop(0)\n","        if order[1] > 100:\n","            print(f\"{order[0]} lebih dari 100 halaman, tetap dalam antrian untuk tahap kedua.\")\n","            self.queue.append((order[0], order[1] // 2))\n","        return order\n","\n","    def front(self):\n","        return self.queue[0] if not self.is_empty() else None\n","\n","    def rear(self):\n","        return self.queue[-1] if not self.is_empty() else None\n","\n","    def is_empty(self):\n","        return len(self.queue) == 0\n","\n","    def size(self):\n","        return len(self.queue)\n","\n","# Contoh penggunaan\n","queue = PhotocopyQueue()\n","\n","# Menambahkan pesanan\n","queue.enqueue(\"IAW35\", 120)  # Diproses dalam dua tahap\n","queue.enqueue(\"BRS32\", 8)    # Fast Track\n","queue.enqueue(\"ZTX78\", 50)   # Masuk antrian\n","queue.enqueue(\"LMN90\", 200)  # Diproses dalam dua tahap\n","\n","print(\"Antrian saat ini:\", queue.queue)\n","print(\"Pesanan pertama dalam antrian:\", queue.front())\n","print(\"Pesanan terakhir dalam antrian:\", queue.rear())\n","print(\"Ukuran antrian:\", queue.size())\n","\n","# Memproses pesanan\n","print(\"Memproses:\", queue.dequeue())\n","print(\"Antrian setelah pemrosesan:\", queue.queue)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bxrw5MPUmTmB","executionInfo":{"status":"ok","timestamp":1741336383815,"user_tz":-420,"elapsed":52,"user":{"displayName":"Ilyasa Abiyyu","userId":"07140171144983850462"}},"outputId":"c03ca436-8ca5-4dab-ba90-a8db4c56d935"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Pesanan IAW35 (120 halaman) ditambahkan ke antrian.\n","BRS32 masuk Fast Track dan langsung diproses!\n","Pesanan ZTX78 (50 halaman) ditambahkan ke antrian.\n","Pesanan LMN90 (200 halaman) ditambahkan ke antrian.\n","Antrian saat ini: [('IAW35', 120), ('ZTX78', 50), ('LMN90', 200)]\n","Pesanan pertama dalam antrian: ('IAW35', 120)\n","Pesanan terakhir dalam antrian: ('LMN90', 200)\n","Ukuran antrian: 3\n","IAW35 lebih dari 100 halaman, tetap dalam antrian untuk tahap kedua.\n","Memproses: ('IAW35', 120)\n","Antrian setelah pemrosesan: [('ZTX78', 50), ('LMN90', 200), ('IAW35', 60)]\n"]}]},{"cell_type":"markdown","source":["**Latihan 3 : Antrian Layanan Parkir Mall**"],"metadata":{"id":"r6cKJiNkmUsg"}},{"cell_type":"code","source":["class ParkingQueue:\n","    def __init__(self, capacity=15):\n","        self.queue = []\n","        self.priority_queue = []  # Untuk kendaraan ramah lingkungan\n","        self.capacity = capacity\n","\n","    def enqueue(self, vehicle_number, eco_friendly=False):\n","        if len(self.queue) + len(self.priority_queue) >= self.capacity:\n","            print(\"Parkiran penuh! Harap tunggu hingga ada kendaraan yang keluar.\")\n","            return\n","\n","        if eco_friendly:\n","            self.priority_queue.insert(0, vehicle_number)  # Masuk lebih dulu\n","            print(f\"{vehicle_number} (Ramah Lingkungan) mendapat prioritas parkir!\")\n","        else:\n","            self.queue.append(vehicle_number)\n","            print(f\"{vehicle_number} masuk antrian parkir.\")\n","\n","    def dequeue(self):\n","        if not self.is_empty():\n","            if self.priority_queue:\n","                return self.priority_queue.pop(0)\n","            return self.queue.pop(0)\n","        print(\"Parkiran kosong, tidak ada kendaraan yang keluar.\")\n","        return None\n","\n","    def front(self):\n","        if not self.is_empty():\n","            return self.priority_queue[0] if self.priority_queue else self.queue[0]\n","        return None\n","\n","    def rear(self):\n","        if not self.is_empty():\n","            return self.queue[-1] if self.queue else self.priority_queue[-1]\n","        return None\n","\n","    def is_empty(self):\n","        return len(self.queue) + len(self.priority_queue) == 0\n","\n","    def size(self):\n","        return len(self.queue) + len(self.priority_queue)\n","\n","# Contoh penggunaan\n","parkiran = ParkingQueue()\n","\n","# Menambahkan kendaraan ke antrian\n","parkiran.enqueue(\"MA35\", eco_friendly=True)  # Kendaraan ramah lingkungan\n","parkiran.enqueue(\"BD32\")  # Kendaraan biasa\n","parkiran.enqueue(\"SB78\", eco_friendly=True)  # Kendaraan ramah lingkungan\n","parkiran.enqueue(\"ML90\")  # Kendaraan biasa\n","\n","print(\"Antrian saat ini:\", parkiran.queue, \"| Prioritas:\", parkiran.priority_queue)\n","print(\"Kendaraan pertama dalam antrian:\", parkiran.front())\n","print(\"Kendaraan terakhir dalam antrian:\", parkiran.rear())\n","print(\"Ukuran antrian:\", parkiran.size())\n","\n","# Kendaraan keluar\n","print(\"Keluar:\", parkiran.dequeue())\n","print(\"Antrian setelah keluar:\", parkiran.queue, \"| Prioritas:\", parkiran.priority_queue)"],"metadata":{"id":"hyRs8_PymUK5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1741776190711,"user_tz":-420,"elapsed":76,"user":{"displayName":"Ilyasa Abiyyu","userId":"07140171144983850462"}},"outputId":"fc9e8368-0ec3-4ca8-9070-14dff5368f45"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MA35 (Ramah Lingkungan) mendapat prioritas parkir!\n","BD32 masuk antrian parkir.\n","SB78 (Ramah Lingkungan) mendapat prioritas parkir!\n","ML90 masuk antrian parkir.\n","Antrian saat ini: ['BD32', 'ML90'] | Prioritas: ['SB78', 'MA35']\n","Kendaraan pertama dalam antrian: SB78\n","Kendaraan terakhir dalam antrian: ML90\n","Ukuran antrian: 4\n","Keluar: SB78\n","Antrian setelah keluar: ['BD32', 'ML90'] | Prioritas: ['MA35']\n"]}]},{"cell_type":"markdown","source":["**Latihan 4 : Antrian Pengambilan Sertifikat di Kampus**"],"metadata":{"id":"nRBmC0p6mUDZ"}},{"cell_type":"code","source":["class Queue:\n","    def __init__(self):\n","        self.items = []\n","\n","    def enqueue(self, student_id):\n","        self.items.append(student_id)\n","\n","    def dequeue(self):\n","        if not self.is_empty():\n","            return self.items.pop(0)\n","        return None\n","\n","    def front(self):\n","        if not self.is_empty():\n","            return self.items[0]\n","        return None\n","\n","    def rear(self):\n","        if not self.is_empty():\n","            return self.items[-1]\n","        return None\n","\n","    def is_empty(self):\n","        return len(self.items) == 0\n","\n","    def size(self):\n","        return len(self.items)\n","\n","def generate_student_id(program, npm):\n","    return program[0].upper() + npm[-2:]\n","\n","# Simulasi antrian\n","regular_queue = Queue()\n","prestasi_queue = Queue()\n","\n","def add_student(program, npm, is_prestasi=False):\n","    student_id = generate_student_id(program, npm)\n","    if is_prestasi:\n","        prestasi_queue.enqueue(student_id)\n","    else:\n","        regular_queue.enqueue(student_id)\n","\n","def process_queue():\n","    if not prestasi_queue.is_empty():\n","        print(f\"Melayani mahasiswa berprestasi: {prestasi_queue.dequeue()}\")\n","    elif not regular_queue.is_empty():\n","        print(f\"Melayani mahasiswa reguler: {regular_queue.dequeue()}\")\n","    else:\n","        print(\"Tidak ada mahasiswa dalam antrian.\")\n","\n","# Contoh penggunaan\n","add_student(\"Teknologi Informasi\", \"2420506035\")\n","add_student(\"Sistem Informasi\", \"2420506042\", is_prestasi=True)\n","add_student(\"Ilmu Komputer\", \"2420506029\")\n","\n","print(\"Antrian pertama:\", regular_queue.front())\n","print(\"Antrian terakhir:\", regular_queue.rear())\n","print(\"Ukuran antrian reguler:\", regular_queue.size())class Queue:\n","    def __init__(self):\n","        self.items = []\n","\n","    def enqueue(self, student_id):\n","        self.items.append(student_id)\n","\n","    def dequeue(self):\n","        if not self.is_empty():\n","            return self.items.pop(0)\n","        return None\n","\n","    def front(self):\n","        if not self.is_empty():\n","            return self.items[0]\n","        return None\n","\n","    def rear(self):\n","        if not self.is_empty():\n","            return self.items[-1]\n","        return None\n","\n","    def is_empty(self):\n","        return len(self.items) == 0\n","\n","    def size(self):\n","        return len(self.items)\n","\n","def generate_student_id(program, npm):\n","    return program[0].upper() + npm[-2:]\n","\n","# Simulasi antrian\n","regular_queue = Queue()\n","prestasi_queue = Queue()\n","\n","def add_student(program, npm, is_prestasi=False):\n","    student_id = generate_student_id(program, npm)\n","    if is_prestasi:\n","        prestasi_queue.enqueue(student_id)\n","    else:\n","        regular_queue.enqueue(student_id)\n","\n","def process_queue():\n","    if not prestasi_queue.is_empty():\n","        print(f\"Melayani mahasiswa berprestasi: {prestasi_queue.dequeue()}\")\n","    elif not regular_queue.is_empty():\n","        print(f\"Melayani mahasiswa reguler: {regular_queue.dequeue()}\")\n","    else:\n","        print(\"Tidak ada mahasiswa dalam antrian.\")\n","\n","# Contoh penggunaan\n","add_student(\"Teknologi Informasi\", \"2420506035\")\n","add_student(\"Sistem Informasi\", \"2420506042\", is_prestasi=True)\n","add_student(\"Ilmu Komputer\", \"2420506029\")\n","\n","print(\"Antrian pertama:\", regular_queue.front())\n","print(\"Antrian terakhir:\", regular_queue.rear())\n","print(\"Ukuran antrian reguler:\", regular_queue.size())\n","print(\"Ukuran antrian prestasi:\", prestasi_queue.size())\n","\n","process_queue()\n","process_queue()\n","process_queue()\n","print(\"Ukuran antrian prestasi:\", prestasi_queue.size())\n","\n","process_queue()\n","process_queue()\n","process_queue()"],"metadata":{"id":"HbAmQXRgmT8Q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1741777084969,"user_tz":-420,"elapsed":7,"user":{"displayName":"Ilyasa Abiyyu","userId":"07140171144983850462"}},"outputId":"a477800e-2077-40dc-e395-187b1521f52c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Antrian pertama: T35\n","Antrian terakhir: I29\n","Ukuran antrian reguler: 2\n","Ukuran antrian prestasi: 1\n","Melayani mahasiswa berprestasi: S42\n","Melayani mahasiswa reguler: T35\n","Melayani mahasiswa reguler: I29\n"]}]}]}